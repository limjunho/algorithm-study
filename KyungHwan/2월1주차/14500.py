import sys

N, M = map(int, sys.stdin.readline().split())
matrix = []

for i in range(N):
    matrix.append(list(map(int, sys.stdin.readline().split())))

tetromino = [
    [(0, 0), (0, 1), (1, 0), (1, 1)], # 일자
    [(0, 0), (0, 1), (0, 2), (0, 3)],
    [(0, 0), (1, 0), (2, 0), (3, 0)], # 네모
    [(0, 0), (1, 0), (1, 1), (2, 1)], # 번개
    [(1, 0), (0, 1), (1, 1), (2, 0)],
    [(1, 0), (1, 1), (0, 1), (0, 2)],
    [(0, 0), (0, 1), (1, 1), (1, 2)],
    [(0, 0), (1, 0), (2, 0), (2, 1)], # L자
    [(0, 1), (1, 1), (2, 0), (2, 1)],
    [(0, 0), (0, 1), (1, 0), (2, 0)],
    [(0, 0), (0, 1), (1, 1), (2, 1)],
    [(1, 0), (0, 1), (1, 1), (1, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 1)],
    [(0, 0), (1, 0), (1, 1), (1, 2)],
    [(1, 0), (1, 1), (1, 2), (0, 2)],
    [(0, 0), (0, 1), (0, 2), (1, 0)],
    [(0, 0), (0, 1), (0, 2), (1, 2)],
    [(0, 0), (1, 0), (1, 1), (2, 0)],
    [(1, 0), (0, 1), (1, 1), (2, 1)] # 빠큐
]

res = 0
for i in range(N):
    for j in range(M):
        for k in range(19):
            temp = 0
            for l in range(4):
                nx = i + tetromino[k][l][0]
                ny = j + tetromino[k][l][1]

                if nx < 0 or nx >= N or ny < 0 or ny >= M:
                    break

                temp += matrix[nx][ny]
            if res < temp:
                res = temp

print(res)
